{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x38f71781aB511c7BdE272977aEa411e7649174A7",
      "txHash": "0x0edecf5ab12de220847670fbc03df9fb6f31e476b438e2d4fcf13941392e32e7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2703163f8bda4cb590a99398a15cc336b707ffcfc87be14b0e54777c18c970a5": {
      "address": "0x5e780f03337eC75C8491FEBCC21d94BC98EB8B40",
      "txHash": "0x5d48e7bdfc52b3d0a580d3a1a377e4ee2d3b36e59c753cab9d7acad19ed89fd7",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "exchangeRate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:34"
          },
          {
            "label": "unstakingFee",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:38"
          },
          {
            "label": "stakingFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:42"
          },
          {
            "label": "bridgingFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:46"
          },
          {
            "label": "minStakingAmt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:50"
          },
          {
            "label": "wrappedToken",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:54"
          },
          {
            "label": "maxDepositPerRequest",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:58"
          },
          {
            "label": "isPaused",
            "offset": 0,
            "slot": "7",
            "type": "t_bool",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:62"
          },
          {
            "label": "nativeWalletReceiver",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:68"
          },
          {
            "label": "maxUnstakeRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:72"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_array(t_struct(UnstakeRequest)3750_storage)dyn_storage)",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:76"
          },
          {
            "label": "withdrawalManager",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:80"
          },
          {
            "label": "serviceFee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:85"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:93"
          },
          {
            "label": "lowerExchangeRateBound",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:99"
          },
          {
            "label": "upperExchangeRateBound",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:100"
          },
          {
            "label": "protocolVault",
            "offset": 0,
            "slot": "16",
            "type": "t_address",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:102"
          },
          {
            "label": "batchTAOAmt",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NtdTAO",
            "src": "contracts\\ntdTAO.sol:160"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)268_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)188_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)97_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)138_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)362_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(UnstakeRequest)3750_storage)dyn_storage": {
            "label": "struct NtdTAO.UnstakeRequest[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(UnstakeRequest)3750_storage)dyn_storage)": {
            "label": "mapping(address => struct NtdTAO.UnstakeRequest[])",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)3750_storage": {
            "label": "struct NtdTAO.UnstakeRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "taoAmt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isReadyForUnstake",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "wrappedToken",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
